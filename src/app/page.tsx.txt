"use client";

import { useMemo, useRef } from 'react';
import { products as allProducts } from '@/lib/products';
import { useAppStore } from '@/hooks/use-app-store';
import { ProductCard } from '@/components/product-card';
import { AnyProduct } from '@/lib/types';
import { Button } from '@/components/ui/button';
import Image from 'next/image';
import { Card } from '@/components/ui/card';
import { Carousel, CarouselContent, CarouselItem, CarouselNext, CarouselPrevious } from '@/components/ui/carousel';
import Autoplay from "embla-carousel-autoplay";


export default function Home() {
  const searchTerm = useAppStore((state) => state.searchTerm);
  const plugin = useRef(
    Autoplay({ delay: 4000, stopOnInteraction: true })
  );

  const filteredProducts = useMemo(() => {
    if (!searchTerm) return allProducts;
    return allProducts.filter(p => 
      p.name.toLowerCase().includes(searchTerm.toLowerCase()) ||
      p.category.toLowerCase().includes(searchTerm.toLowerCase()) ||
      p.description.toLowerCase().includes(searchTerm.toLowerCase())
    );
  }, [searchTerm]);

  const categories = useMemo(() => {
    const categorySet = new Set(filteredProducts.map(p => p.category));
    return Array.from(categorySet);
  }, [filteredProducts]);

  return (
    <div className="py-6 sm:py-10">
      <section id="home" className="mb-16">
        <Carousel 
          className="w-full" 
          opts={{ loop: true }}
          plugins={[plugin.current]}
          onMouseEnter={plugin.current.stop}
          onMouseLeave={plugin.current.reset}
        >
          <CarouselContent>
            <CarouselItem>
              <div 
                className="relative p-12 md:p-20 rounded-2xl shadow-lg overflow-hidden bg-cover bg-center h-[400px] flex flex-col justify-center text-center"
                style={{ backgroundImage: "url('https://www.novasg.com.br/images/palavras-chave/grafica-qualidade.jpg')" }}
              >
                  <div className="absolute inset-0 bg-black/70"></div>
                  <div className="relative z-10">
                       <h1 className="font-headline text-4xl md:text-6xl font-bold text-primary mb-4">
                          Vidal Design Solutions
                      </h1>
                      <p className="max-w-3xl mx-auto text-lg md:text-xl text-foreground/80 mb-8">
                          Qualidade e Inovação em Comunicação Visual. Transformamos suas ideias em realidade com design de ponta e materiais de alta qualidade.
                      </p>
                       <a href="#products">
                          <Button size="lg" className="bg-accent text-accent-foreground hover:bg-accent/90">
                              Ver Produtos
                          </Button>
                      </a>
                  </div>
              </div>
            </CarouselItem>
            <CarouselItem>
                <div className="rounded-2xl shadow-lg overflow-hidden h-[400px] relative">
                    <Image 
                        src="https://a.imagem.app/BrQUlv.jpeg" 
                        alt="Banner Vidal Design Solutions" 
                        fill
                        className="w-full h-full object-cover"
                        data-ai-hint="company banner"
                    />
                </div>
            </CarouselItem>
          </CarouselContent>
          <CarouselPrevious className="hidden sm:flex" />
          <CarouselNext className="hidden sm:flex" />
        </Carousel>
      </section>

      <section id="products" className="mt-16">
        <h2 className="font-headline text-3xl md:text-5xl text-center text-primary mb-12">Nossos Produtos</h2>
        {categories.length > 0 ? (
          categories.map(category => (
            <div key={category} id={category.toLowerCase().replace(/\s/g, '-')} className="mb-16">
              <h3 className="font-headline text-2xl md:text-3xl text-primary border-b-2 border-accent pb-3 mb-8">
                {category}
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 xl:grid-cols-3 gap-8">
                {filteredProducts
                  .filter(p => p.category === category)
                  .map(product => (
                    <ProductCard key={product.id} product={product as AnyProduct} />
                  ))}
              </div>
            </div>
          ))
        ) : (
          <p className="text-center text-lg text-foreground/70">Nenhum produto encontrado para "{searchTerm}". Tente uma busca diferente.</p>
        )}
      </section>
    </div>
  );
}